## Animation & GUI Architecture Guide

This document outlines the complete design system used in the Performance Oracle agent, including animations, color schemes, component patterns, and responsive layouts that can be applied to other agents in the ecosystem.

---

## 1. Color Palette & Theme Architecture

### Primary Color System
```css
/* Dark Theme Base Colors */
--dark-primary: #0a0a12      /* Deep space background */
--dark-secondary: #1a1a2e    /* Card backgrounds */
--dark-surface: #16213e      /* Interactive surfaces */
--dark-muted: #2a3441        /* Muted elements */

/* Accent Color Hierarchy */
--dark-accent: #00ff9d       /* Primary neon green - success/growth */
--dark-accent2: #0099ff      /* Secondary cyan blue - data/analytics */
--dark-accent3: #ff6b6b      /* Tertiary coral red - warnings/alerts */
```

### Color Usage Guidelines
- **Primary Actions**: `dark-accent` (#00ff9d)
- **Data Visualization**: `dark-accent2` (#0099ff) 
- **Warnings/Alerts**: `dark-accent3` (#ff6b6b)
- **Backgrounds**: Gradient combinations of primary colors
- **Text Hierarchy**: White → Gray-400 → Gray-500

---

## 2. Typography System

### Font Hierarchy
```css
/* Headers */
.text-3xl: 28px-32px /* Main dashboard titles */
.text-xl: 20px-24px  /* Section headers */
.text-lg: 18px-20px  /* Subsection titles */

/* Body Text */
.text-base: 16px     /* Primary content */
.text-sm: 14px       /* Secondary content */
.text-xs: 12px       /* Labels and meta info */

/* Responsive Scaling */
lg:text-3xl  /* Desktop: larger sizes */
lg:text-xl   /* Desktop: scale up */
text-lg      /* Mobile: base size */
text-base    /* Mobile: smaller */
```

### Font Weights
- **Bold (font-bold)**: Metric values, key data points
- **Semibold (font-semibold)**: Section headers
- **Medium (font-medium)**: Interactive elements
- **Normal**: Body text and descriptions

---

## 3. Animation System

### Core Animation Classes
```css
/* Gradient Text Animation */
.gradient-text {
  background: linear-gradient(45deg, #00ff9d, #0099ff, #ff6b6b, #00ff9d);
  background-size: 400% 400%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradient-shift 3s ease infinite;
}

/* Holographic Card Effect */
.holographic {
  background: linear-gradient(135deg, 
    rgba(0, 255, 157, 0.1) 0%,
    rgba(26, 26, 46, 0.8) 50%,
    rgba(0, 153, 255, 0.1) 100%
  );
  backdrop-filter: blur(10px);
  border: 1px solid rgba(0, 255, 157, 0.2);
}

/* Interactive Hover Effects */
.hover:scale-105        /* Subtle scale on hover */
.transition-all         /* Smooth transitions */
.duration-300          /* 300ms timing */

/* Pulsing Animations */
.animate-pulse-glow    /* Custom glow pulse */
.animate-ping          /* Expanding ring effect */
.animate-pulse         /* Standard pulse */
```

### Animation Timing Guidelines
- **Micro-interactions**: 200-300ms
- **Component transitions**: 300-500ms  
- **Page transitions**: 500-800ms
- **Ambient animations**: 2-3 seconds (infinite)

---

## 4. Component Architecture

### Card Component Pattern
```tsx
// Base holographic card structure
<div className="holographic rounded-xl p-4 lg:p-6 group hover:scale-105 transition-all duration-300">
  {/* Header with icon and controls */}
  <div className="flex items-center justify-between mb-4">
    <div className="p-2 lg:p-3 rounded-lg bg-dark-accent/10">
      <Icon className="w-5 h-5 lg:w-6 lg:h-6 text-dark-accent" />
    </div>
    <div className="flex items-center gap-2">
      {/* Status indicators */}
    </div>
  </div>
  
  {/* Content area */}
  <div className="space-y-4">
    {/* Dynamic content */}
  </div>
  
  {/* Animation line */}
  <div className="mt-4 h-1 bg-dark-primary rounded-full overflow-hidden">
    <div className="h-full bg-dark-accent translate-x-[-100%] group-hover:translate-x-0 transition-transform duration-1000" />
  </div>
</div>
```

### Metric Display Pattern
```tsx
// Standardized metric presentation
<div className="space-y-1">
  <p className="text-xs lg:text-sm text-gray-400 font-medium">{title}</p>
  <div className="flex items-baseline gap-1">
    <span className="text-2xl lg:text-3xl font-bold text-white gradient-text">
      {value}
    </span>
    <span className="text-sm lg:text-base text-gray-400 font-medium">
      {unit}
    </span>
  </div>
</div>
```

---

## 5. Responsive Design System

### Breakpoint Strategy
```css
/* Mobile First Approach */
/* Base: 320px+ (mobile) */
sm:   /* 640px+ (large mobile) */
md:   /* 768px+ (tablet) */
lg:   /* 1024px+ (desktop) */
xl:   /* 1280px+ (large desktop) */
```

### Grid Systems
```tsx
/* Dashboard Grid */
grid-cols-1 sm:grid-cols-2 lg:grid-cols-4  /* Responsive columns */
gap-4 lg:gap-6                             /* Responsive spacing */

/* Content Layout */
flex-col lg:flex-row                       /* Stack on mobile, row on desktop */
space-y-4 lg:space-y-0 lg:space-x-6      /* Responsive spacing */
```

### Typography Scaling
```tsx
/* Responsive text sizes */
text-lg lg:text-xl      /* Section headers */
text-sm lg:text-base    /* Body text */
text-xs lg:text-sm      /* Labels */
```

---

## 6. Interactive Element Patterns

### Button System
```tsx
// Primary action button
className="p-2 rounded-lg bg-dark-accent/20 text-dark-accent hover:bg-dark-accent/30 transition-colors"

// Secondary action button  
className="p-2 rounded-lg bg-dark-secondary/50 text-gray-400 hover:text-white transition-colors"

// Icon button pattern
<button className="p-2 lg:p-3 rounded-lg bg-dark-accent/10 hover:bg-dark-accent/20 transition-colors">
  <Icon className="w-4 h-4 lg:w-5 lg:h-5 text-dark-accent" />
</button>
```

### Status Indicators
```tsx
// Live status indicator
<div className="flex items-center gap-2">
  <div className="w-2 h-2 rounded-full bg-dark-accent animate-pulse" />
  <span className="text-xs text-gray-400">Live</span>
</div>

// Metric change indicator
<span className={`text-xs px-2 py-1 rounded-full ${
  isPositive ? 'bg-dark-accent/20 text-dark-accent' : 'bg-dark-accent3/20 text-dark-accent3'
}`}>
  {change}
</span>
```

---

## 7. Data Visualization Patterns

### Progress Bars
```tsx
<div className="w-full bg-dark-primary rounded-full h-2">
  <div 
    className="h-2 rounded-full bg-gradient-to-r from-dark-accent to-dark-accent2 transition-all duration-1000"
    style={{ width: `${percentage}%` }}
  />
</div>
```

### Sparkline Charts
```tsx
<div className="w-16 h-8 relative">
  <div className="absolute inset-0 flex items-end justify-between">
    {Array.from({ length: 8 }).map((_, i) => (
      <div
        key={i}
        className="w-1 bg-gradient-to-t from-dark-accent/30 to-dark-accent rounded-full animate-pulse"
        style={{
          height: `${20 + Math.random() * 80}%`,
          animationDelay: `${i * 0.1}s`
        }}
      />
    ))}
  </div>
</div>
```

---

## 8. Navigation & Layout Patterns

### Header Pattern
```tsx
<div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6">
  <div className="flex items-center gap-3">
    <div className="p-3 rounded-lg bg-dark-accent/20">
      <Icon className="w-6 h-6 text-dark-accent" />
    </div>
    <div>
      <h2 className="text-xl font-bold text-white">{title}</h2>
      <p className="text-sm text-gray-400">{subtitle}</p>
    </div>
  </div>
  
  <div className="flex flex-col sm:flex-row gap-4">
    {/* Controls */}
  </div>
</div>
```

### Navigation Tabs
```tsx
<div className="flex bg-dark-secondary/50 rounded-lg p-1">
  {options.map((option) => (
    <button
      key={option}
      className={`px-3 py-1 rounded-md text-sm font-medium transition-all capitalize ${
        selected === option
          ? 'bg-dark-accent text-dark-primary'
          : 'text-gray-400 hover:text-white'
      }`}
    >
      {option}
    </button>
  ))}
</div>
```

---

## 9. Special Effects & Animations

### Glow Effects
```css
.metric-glow {
  filter: drop-shadow(0 0 8px rgba(0, 255, 157, 0.4));
}

.warning-glow {
  filter: drop-shadow(0 0 8px rgba(255, 107, 107, 0.4));
}

.info-glow {
  filter: drop-shadow(0 0 8px rgba(0, 153, 255, 0.4));
}
```

### Neural Network Background
```css
.neural-bg::before {
  content: '';
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background: 
    radial-gradient(circle at 25% 25%, rgba(0, 255, 157, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(0, 153, 255, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 50% 50%, rgba(255, 107, 107, 0.05) 0%, transparent 50%);
  pointer-events: none;
}
```

---

## 10. Mobile-First Responsive Guidelines

### Container Patterns
```tsx
/* Full-width responsive container */
<div className="space-y-6">
  
/* Grid with responsive columns */
<div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6">

/* Flexible layout */
<div className="flex flex-col lg:flex-row gap-6">
```

### Text Scaling Strategy
```tsx
/* Progressive text sizing */
text-sm sm:text-base lg:text-lg     /* Body text progression */
text-lg sm:text-xl lg:text-2xl      /* Header progression */
text-xs sm:text-sm lg:text-base     /* Label progression */
```

### Padding & Spacing
```tsx
/* Responsive padding */
p-4 lg:p-6              /* Card padding */
px-4 lg:px-6            /* Horizontal padding */
gap-4 lg:gap-6          /* Grid gaps */
space-y-4 lg:space-y-6  /* Vertical spacing */
```

---

## 11. Component State Management

### Loading States
```tsx
// Skeleton loading
<div className="animate-pulse">
  <div className="h-4 bg-dark-secondary rounded w-3/4 mb-2"></div>
  <div className="h-6 bg-dark-secondary rounded w-1/2"></div>
</div>

// Shimmer effect
<div className="relative overflow-hidden bg-dark-secondary rounded">
  <div className="absolute inset-0 -translate-x-full animate-[shimmer_2s_infinite] bg-gradient-to-r from-transparent via-white/10 to-transparent"></div>
</div>
```

### Error States
```tsx
<div className="p-4 rounded-lg bg-dark-accent3/10 border border-dark-accent3/20">
  <div className="flex items-center gap-2 text-dark-accent3">
    <AlertTriangle className="w-4 h-4" />
    <span className="text-sm font-medium">Error message</span>
  </div>
</div>
```

---

## 12. Implementation Checklist

### For Each New Agent Component:
- [ ] Use `holographic` class for main containers
- [ ] Implement responsive grid with `grid-cols-1 sm:grid-cols-2 lg:grid-cols-4`
- [ ] Add `hover:scale-105 transition-all duration-300` to interactive cards
- [ ] Use `gradient-text` class for key metrics
- [ ] Implement consistent icon sizing: `w-4 h-4 lg:w-5 lg:h-5`
- [ ] Add status indicators with `animate-pulse`
- [ ] Use three-tier color system (accent, accent2, accent3)
- [ ] Implement mobile-first responsive typography
- [ ] Add subtle animations with appropriate delays
- [ ] Include loading and error states

### File Structure Pattern:
```
src/components/
├── [AgentName]/
│   ├── index.tsx                 # Main component
│   ├── [Module1].tsx            # Feature modules
│   ├── [Module2].tsx
│   └── shared/
│       ├── MetricCard.tsx       # Reusable components
│       └── StatusIndicator.tsx
```

This design system ensures visual consistency across all agents while maintaining the futuristic, data-driven aesthetic 